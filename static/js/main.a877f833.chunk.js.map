{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","onClick","toggleMode","type","id","htmlFor","TextForm","useState","text","setText","style","color","heading","rows","value","onChange","event","console","log","target","backgroundColor","disabled","length","newText","toUpperCase","showAlert","newtext","toLowerCase","cptxt","document","getElementById","select","navigator","clipboard","writeText","textNew","split","join","filter","element","Alert","height","alert","role","word","lower","charAt","slice","capitalize","msg","defaultProps","App","setMode","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.a877f833.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <div>\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n            <div className=\"container-fluid\">\r\n            <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n            <div className=\" navbar\">\r\n                <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                </ul>\r\n                <div className={`form-check form-switch text-${props.mode === 'light' ? 'dark':'light'}`}>\r\n                    <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n                    <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Dark Mode</label>\r\n                </div>\r\n            </div>\r\n            </div>\r\n        </nav>\r\n        </div>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {title : PropTypes.string}\r\n\r\nNavbar.defaultProps = {title : \"set here title\"}","import React, {useState} from 'react'\r\n\r\n\r\nexport default function TextForm(props) {\r\n\r\n    const handleUpClick=()=>{\r\n        console.log(\"Uppercase was clicked\");\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to Upper case\",\"success\");\r\n    }\r\n\r\n    const handleOnChange = (event)=>{\r\n        console.log(\"clicked onchange\");\r\n        setText(event.target.value);\r\n    }\r\n\r\n    const handleLowClick = ()=>{\r\n        let newtext = text.toLowerCase();\r\n        setText(newtext);\r\n        props.showAlert(\"Converted to Lower case\",\"success\")\r\n    }\r\n\r\n    const handleClearClick = ()=>{\r\n        setText(\"\");\r\n        props.showAlert(\"Text Cleared\",\"success\")\r\n    }\r\n\r\n    const handleCopyClick=()=>{\r\n        var cptxt = document.getElementById(\"myBox\");\r\n        cptxt.select();\r\n        navigator.clipboard.writeText(cptxt.value);\r\n        props.showAlert(\"Text has been Copied\",\"success\")\r\n    }\r\n\r\n    const handleRemoveExtraSpaces=()=>{\r\n        let textNew = text.split(/[ ]+/);\r\n        setText(textNew.join(\" \"));\r\n        props.showAlert(\"Remover extra spaces\",\"success\")\r\n    }\r\n    \r\n    const [text,setText] = useState('');\r\n    return (\r\n        <>\r\n            <div className=\"form-group p-3\">\r\n                <label htmlFor=\"mybox mt-5\" style={{color: props.mode === 'dark' ? 'white':'#070238'}}>{props.heading}</label>\r\n                <textarea className=\"form-control\" id=\"myBox\" rows=\"8\" value={text} onChange={handleOnChange} style={{backgroundColor: props.mode === 'dark' ? '#033E56':'white' , color: props.mode === 'dark' ? 'white':'#070238'}} ></textarea>\r\n            </div>\r\n            <button disabled={text.length===0} className=\"btn btn-primary mt-3 mx-2\" onClick={handleUpClick}>Convert to UpperCase</button>\r\n            <button disabled={text.length===0} className=\"btn btn-warning mt-3 mx-2\" onClick={handleLowClick}>Convert to LowerCase</button>\r\n            <button disabled={text.length===0} className=\"btn btn-primary mt-3 mx-2\" onClick={handleCopyClick} >Copy Text</button>\r\n            <button disabled={text.length===0} className=\"btn btn-success mt-3 mx-2\" onClick={handleRemoveExtraSpaces} >Remove Extra Spaces</button>\r\n            <button disabled={text.length===0} className=\"btn btn-danger mt-3 mx-2\" onClick={handleClearClick} >Clear Text</button>\r\n            <h1 className=\"mt-5\">Preview</h1>\r\n            <p>{text.length>0?text:\"Enter something in above textbox to preview here.\"}</p>\r\n            <div className=\"container\">\r\n                <h1>Your text Summery</h1>\r\n                <p>{text.split(/\\s+/).filter((element)=>{return element.length!==0}).length} words and {text.length} characters</p>\r\n                <p>{0.008*text.split(\" \").filter((element)=>{return element.length!==0}).length} Minutes for read.</p>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capitalize = (word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    return (\r\n        <div className=\"\" style={{height:'50px'}}>\r\n            {props.alert && <div>\r\n                <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n                    <strong>{capitalize(props.alert.type)} </strong> {props.alert.msg}\r\n                </div>\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n","import './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport Alert from './components/Alert';\nimport React, {useState} from 'react';\n\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message,type)=>{\n    setAlert({\n      msg : message,\n      type : type\n    })\n    setTimeout(()=>{\n      setAlert(null);\n    },2000);\n  }\n\n\n  const toggleMode=()=>{\n    if(mode === 'light'){\n      setMode('dark');\n      document.body.style.backgroundColor = '#012635';\n      document.body.style.color = 'white';\n      showAlert(\"Dark mode has been enabled\",\"success\")\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      document.body.style.color = 'black';\n      showAlert(\"Light mode has been enabled\",\"success\")\n\n    }\n  }\n  return (\n    <>\n      <Navbar title=\"TextUtils\" mode = {mode} toggleMode={toggleMode} />\n      <Alert alert={alert} />\n      <div className=\"container\">\n        <TextForm heading=\"Enter the text to analyse below\" mode = {mode} showAlert = {showAlert} />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}