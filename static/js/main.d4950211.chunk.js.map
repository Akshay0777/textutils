{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","style","color","heading","rows","value","onChange","event","console","log","target","backgroundColor","newText","toUpperCase","showAlert","newtext","toLowerCase","cptxt","document","getElementById","select","navigator","clipboard","writeText","textNew","split","join","length","Alert","alert","role","word","lower","charAt","slice","capitalize","msg","defaultProps","App","setMode","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.d4950211.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types';\r\n// import { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <div>\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n            <div className=\"container-fluid\">\r\n            <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n            {/* <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link> */}\r\n            <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                <li className=\"nav-item\">\r\n                    <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n                    {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link> */}\r\n                </li>\r\n                {/* <li className=\"nav-item\">\r\n                    <Link className=\"nav-link\" to=\"/about\">About</Link>\r\n                </li> */}\r\n                </ul>\r\n                {/* for color pelette for dark mode */}\r\n                {/* <ul className=\"navbar-nav mr-auto mb-2 mb-lg-0\">\r\n                    <li className=\"nav-item\">\r\n                        <button type=\"button\" class=\"btn\">a</button>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <button type=\"button\" class=\"btn\">b</button>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <button type=\"button\" class=\"btn\">c</button>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <button type=\"button\" class=\"btn\">d</button>\r\n                    </li>\r\n                </ul> */}\r\n                {/* pellete end here */}\r\n                <div className={`form-check form-switch text-${props.mode === 'light' ? 'dark':'light'}`}>\r\n                    <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n                    <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Dark Mode</label>\r\n                </div>\r\n            </div>\r\n            </div>\r\n        </nav>\r\n        </div>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {title : PropTypes.string}\r\n\r\nNavbar.defaultProps = {title : \"set here title\"}","import React, {useState} from 'react'\r\n\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick=()=>{\r\n        console.log(\"Uppercase was clicked\");\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to Upper case\",\"success\");\r\n    }\r\n\r\n    const handleOnChange = (event)=>{\r\n        console.log(\"clicked onchange\");\r\n        setText(event.target.value);\r\n    }\r\n\r\n    const handleLowClick = ()=>{\r\n        let newtext = text.toLowerCase();\r\n        setText(newtext);\r\n        props.showAlert(\"Converted to Lower case\",\"success\")\r\n    }\r\n\r\n    const handleClearClick = ()=>{\r\n        setText(\"\");\r\n        props.showAlert(\"Text Cleared\",\"success\")\r\n    }\r\n\r\n    const handleCopyClick=()=>{\r\n        var cptxt = document.getElementById(\"myBox\");\r\n        cptxt.select();\r\n        navigator.clipboard.writeText(cptxt.value);\r\n        props.showAlert(\"Text has been Copied\",\"success\")\r\n    }\r\n\r\n    const handleRemoveExtraSpaces=()=>{\r\n        let textNew = text.split(/[ ]+/);\r\n        setText(textNew.join(\" \"));\r\n        props.showAlert(\"Remover extra spaces\",\"success\")\r\n    }\r\n    \r\n    const [text,setText] = useState('Enter text here...');\r\n    // setText(\"akshay pawar\");\r\n    return (\r\n        <>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"mybox\" style={{color: props.mode === 'dark' ? 'white':'#070238'}}>{props.heading}</label>\r\n                <textarea className=\"form-control\" id=\"myBox\" rows=\"8\" value={text} onChange={handleOnChange} style={{backgroundColor: props.mode === 'dark' ? 'grey':'white' , color: props.mode === 'dark' ? 'white':'#070238'}} ></textarea>\r\n            </div>\r\n            <button className=\"btn btn-primary mt-3 mx-2\" onClick={handleUpClick}>Convert to UpperCase</button>\r\n            <button className=\"btn btn-warning mt-3 mx-2\" onClick={handleLowClick}>Convert to LowerCase</button>\r\n            <button className=\"btn btn-primary mt-3 mx-2\" onClick={handleCopyClick} >Copy Text</button>\r\n            <button className=\"btn btn-success mt-3 mx-2\" onClick={handleRemoveExtraSpaces} >Remove Extra Spaces</button>\r\n            <button className=\"btn btn-danger mt-3 mx-2\" onClick={handleClearClick} >Clear Text</button>\r\n            <h1 className=\"mt-5\">Preview</h1>\r\n            <p>{text.length>0?text:\"Enter something in above textbox to preview here.\"}</p>\r\n            <div className=\"container\">\r\n                <h1>Your text Summery</h1>\r\n                <p>{text.split(\" \").length} words and {text.length} characters</p>\r\n                <p>{0.008*text.split(\" \").length} Minutes for read.</p>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capitalize = (word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    return (\r\n        props.alert && <div>\r\n            <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n                <strong>{capitalize(props.alert.type)} </strong> {props.alert.msg}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport About from './components/About';\nimport Alert from './components/Alert';\nimport React, {useState} from 'react';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route\n// } from \"react-router-dom\";\n\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message,type)=>{\n    setAlert({\n      msg : message,\n      type : type\n    })\n    setTimeout(()=>{\n      setAlert(null);\n    },2000);\n  }\n\n  const toggleMode=()=>{\n    if(mode === 'light'){\n      setMode('dark');\n      document.body.style.backgroundColor = '#070238';\n      document.body.style.color = 'white';\n      showAlert(\"Dark mode has been enabled\",\"success\")\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      document.body.style.color = 'black';\n      showAlert(\"Light mode has been enabled\",\"success\")\n\n    }\n  }\n  return (\n    <>\n      \n      {/* <Router>\n      <Navbar title=\"TextUtils\" mode = {mode} toggleMode={toggleMode} />\n      <Alert alert={alert} />\n      <Switch>\n          <Route exact path=\"/about\">\n            <About />\n          </Route>\n          <Route exact path=\"/\">\n            <div className=\"container\">\n              <TextForm heading=\"Enter the text to analyse below\" mode = {mode} showAlert = {showAlert} />\n            </div>\n          </Route>\n      </Switch>\n      </Router> */}\n      <Navbar title=\"TextUtils\" mode = {mode} toggleMode={toggleMode} />\n      <Alert alert={alert} />\n      <div className=\"container\">\n        <TextForm heading=\"Enter the text to analyse below\" mode = {mode} showAlert = {showAlert} />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}